name: GameCI Template ðŸŽ®

on: workflow_dispatch

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  checklicense:
    name: Check for the Unity license file ðŸ”‘
    runs-on: ubuntu-latest
    steps:
      - name: O projeto estÃ¡ sem a licenÃ§a da Unity
        if: ${{!startsWith(env.UNITY_LICENSE, '<') }}
        run: exit 1
  
  testRunner:
    needs: checklicense
    name: Test in ${{ matrix.testMode }} âœ¨
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - EditMode
          - PlayMode
    steps:
        #aqui Ã© feito o checkout do cÃ³digo
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Create LFS file list
      #   run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      # - name: Restore LFS cache
      #   uses: actions/cache@v3
      #   id: lfs-cache
      #   with:
      #     path: .git/lfs
      #     key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      # - name: Git LFS Pull
      #   run: |
      #     git lfs pull
      #     git add .
      #     git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-test-project-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-test-project-
            Library-

      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        id: testRunner
        with:
          testMode: ${{ matrix.testMode }}
          checkName: ${{ matrix.testMode }} test results
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v2
        with:
          name: Test results (${{ matrix.testMode }})
          path: ${{ steps.testRunner.outputs.artifactsPath }}

  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
          targetPlatform:
            - StandaloneWindows64 # Build a Windows 64-bit standalone.
            - StandaloneOSX # Build a macOS standalone.
            - StandaloneLinux64 # Build a Linux 64-bit standalone.
            - WebGL # Build a WebGL player.
            - iOS # Build an iOS player.
            - Android # Build an Android player.    
    steps:
          - uses: actions/checkout@v2
            with:
              fetch-depth: 0
              lfs: false
          - uses: actions/cache@v2
            with:
                      path: Library
                      key: Library-${{ matrix.targetPlatform }}
                      restore-keys: Library-
          - uses: game-ci/unity-builder@v2
            env:
              UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
              with:
              targetPlatform: ${{ matrix.targetPlatform }}
          - uses: actions/upload-artifact@v2
            with:
                      name: Build-${{ matrix.targetPlatform }}
                      path: build/${{ matrix.targetPlatform }}

  deployPages:
    needs: buildForAllSupportedPlatforms
    name: Deploy to Github Pages ðŸš€
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: build-WebGL
          path: build

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: build/WebGL